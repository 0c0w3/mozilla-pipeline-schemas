{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "id": "http://jsonschema.net",
  "type": "object",
  "description": "Metaschema for validating the structure of the per-doctype schemas in this repository",
  "properties": {
    "mozPipelineMetadata": {
      "type": "object",
      "description": "Container for per-doctype metadata that can affect how pings are processed in the pipeline",
      "additionalProperties": false,
      "properties": {
        "$comment": {
          "type": "string",
          "description": "Optional comment about the pipeline handling for this doctype"
        },
        "bq_table": {
          "type": "string",
          "description": "NOT YET IMPLEMENTED: The name of the destination BigQuery table"
        },
        "bq_dataset_family": {
          "type": "string",
          "description": "NOT YET IMPLEMENTED: The base name for the destination BigQuery dataset; if this is set to 'telemetry', the pipeline will write into 'telemetry_live'"
        },
        "bq_metadata_format": {
          "type": "string",
          "description": "The logical format for the metadata struct in the destination BigQuery table",
          "enum": ["structured", "telemetry", "pioneer"]
        },
        "bq_workgroup_access": {
          "type": "array",
          "description": "NOT YET IMPLEMENTED: The workgroups with access to the destination BigQuery table",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "role": {
                "type": "string",
                "description": "Predefined BigQuery role, see https://cloud.google.com/bigquery/docs/access-control#bigquery; only specific roles are supported",
                "enum": ["roles/bigquery.dataViewer", "roles/bigquery.dataEditor"]
              },
              "members": {
                "type": "array",
                "items": {
                    "type": "string",
                    "description": "Workgroup identifier with an optional slash-delimited subgroup label; when unspecified the subgroup is set to 'default'",
                    "pattern": "^workgroup:[a-z0-9-]+(/[a-z0-9-]+){0,1}$"
                }
              }
            }
          }
        },
        "expiration_policy": {
          "type": "object",
          "description": "Various options controlling data lifecycle",
          "additionalProperties": false,
          "properties": {
            "delete_after_days": {
              "type": "integer",
              "description": "If present, a time_partitioning_expiration policy will be set on the destination stable table in BigQuery"
            },
            "collect_through_date": {
              "type": "string",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "description": "NOT YET IMPLEMENTED: If present, the pipeline will reject new data with submission_timestamp after the given date, sending it to error output"
            }
          }
        },
        "jwe_mappings": {
          "type": "array",
          "description": "Mappings of encrypted JWE field paths to destinations where the value decrypted by the pipeline should be placed; initial use case is Account Ecosystem Telemetry; paths must be in [JSON Pointer format](https://tools.ietf.org/html/rfc6901) like '/payload/ecosystemAnonId'",
          "items": {
            "type": "object",
            "properties": {
              "source_field_path":{
                "type": "string",
                "pattern": "^/.*$"
              },
              "decrypted_field_path":{
                "type": "string",
                "pattern": "^/.*$"
              }
            }
          }
        }
      }
    }
  }
}
