{
  "$id": "moz://mozilla.org/schemas/glean/ping/1",
  "$schema": "http://json-schema.org/draft-06/schema#",
  "additionalProperties": false,
  "description": "Schema for the ping content sent by Mozilla's glean telemetry SDK\n",
  "properties": {
    "$schema": {
      "enum": [
        "moz://mozilla.org/schemas/glean/ping/1"
      ],
      "type": "string"
    },
    "client_info": {
      "additionalProperties": false,
      "properties": {
        "android_sdk_version": {
          "description": "The optional Android specific SDK version of the software running on this hardware device.",
          "type": "string"
        },
        "app_build": {
          "description": "The build identifier generated by the CI system (e.g. \"1234/A\"). For language bindings that provide automatic detection for this value, (e.g. Android/Kotlin), in the unlikely event that the build identifier can not be retrieved from the OS, it is set to \"inaccessible\". For other language bindings, if the value was not provided through configuration, this metric gets set to `Unknown`.",
          "type": "string"
        },
        "app_channel": {
          "description": "The channel the application is being distributed on.",
          "type": "string"
        },
        "app_display_version": {
          "description": "The user visible version string (e.g. \"1.0.3\").  In the unlikely event that the display version can not be retrieved, it is set to \"inaccessible\".",
          "type": "string"
        },
        "architecture": {
          "description": "The architecture of the device, (e.g. \"arm\", \"x86\").",
          "type": "string"
        },
        "build_date": {
          "description": "The date & time the application was built",
          "format": "datetime",
          "type": "string"
        },
        "client_id": {
          "description": "A UUID uniquely identifying the client.",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "type": "string"
        },
        "device_manufacturer": {
          "description": "The manufacturer of the device the application is running on. Not set if the device manufacturer can't be determined (e.g. on Desktop).",
          "type": "string"
        },
        "device_model": {
          "description": "The model of the device the application is running on. On Android, this is Build.MODEL, the user-visible marketing name, like \"Pixel 2 XL\". Not set if the device model can't be determined (e.g. on Desktop).",
          "type": "string"
        },
        "first_run_date": {
          "description": "The date of the first run of the application.",
          "format": "datetime",
          "type": "string"
        },
        "locale": {
          "description": "The locale of the application during initialization (e.g. \"es-ES\"). If the locale can't be determined on the system, the value is [\"und\"](https://unicode.org/reports/tr35/#Unknown_or_Invalid_Identifiers), to indicate \"undetermined\".",
          "type": "string"
        },
        "os": {
          "description": "The name of the operating system. Possible values: Android, iOS, Linux, Darwin, Windows, FreeBSD, NetBSD, OpenBSD, Solaris, unknown",
          "type": "string"
        },
        "os_version": {
          "description": "The user-visible version of the operating system (e.g. \"1.2.3\"). If the version detection fails, this metric gets set to `Unknown`.",
          "type": "string"
        },
        "telemetry_sdk_build": {
          "description": "The version of the Glean SDK",
          "type": "string"
        },
        "windows_build_number": {
          "description": "The optional Windows build number, reported by Windows (e.g. 22000) and not set for other platforms",
          "type": "integer"
        }
      },
      "required": [
        "app_build",
        "app_display_version",
        "architecture",
        "first_run_date",
        "os",
        "os_version",
        "telemetry_sdk_build"
      ],
      "type": "object"
    },
    "events": {
      "items": {
        "additionalProperties": false,
        "properties": {
          "category": {
            "type": "string"
          },
          "extra": {
            "additionalProperties": {
              "type": "string"
            },
            "propertyNames": {
              "maxLength": 40,
              "type": "string"
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "timestamp": {
            "minimum": 0,
            "type": "integer"
          }
        },
        "required": [
          "timestamp",
          "category",
          "name"
        ],
        "type": "object"
      },
      "type": "array"
    },
    "metrics": {
      "additionalProperties": false,
      "properties": {
        "boolean": {
          "type": "object",
          "properties": {
            "glean.error.preinit_tasks_timeout": {
              "type": "boolean",
              "description": "Set to true if the tasks that are queued prior to Glean initialization time out."
            }
          }
        },
        "counter": {
          "type": "object",
          "properties": {
            "glean.error.preinit_tasks_overflow": {
              "type": "integer",
              "description": "The number of tasks that overflowed the pre-initialization buffer.\nOnly sent if the buffer ever overflows.\n\nIn Version 0 this reported the total number of tasks enqueued.\n"
            },
            "glean.upload.deleted_pings_after_quota_hit": {
              "type": "integer",
              "description": "The number of pings deleted after the quota\nfor the size of the pending pings directory or number of files is hit.\nSince quota is only calculated for the pending pings directory,\nand deletion request ping live in a different directory,\ndeletion request pings are never deleted.\n"
            },
            "glean.upload.pending_pings": {
              "type": "integer",
              "description": "The total number of pending pings at startup.\nThis does not include deletion-request pings.\n"
            },
            "glean.validation.foreground_count": {
              "type": "integer",
              "description": "On mobile, the number of times the application went to foreground.\n"
            },
            "glean.error.io": {
              "type": "integer",
              "description": "The number of times we encountered an IO error\nwhen writing a pending ping to disk.\n"
            },
            "glean.time.invalid_timezone_offset": {
              "type": "integer",
              "description": "Counts the number of times we encountered an invalid timezone offset\nwhen trying to get the current time.\nA timezone offset is invalid if it is outside [-24h, +24h].\nIf invalid a UTC offset is used (+0h).\n"
            }
          }
        },
        "datetime": {
          "type": "object",
          "properties": {
            "glean.validation.first_run_hour": {
              "format": "datetime",
              "type": "string",
              "description": "The hour of the first run of the application.\n"
            }
          }
        },
        "labeled_counter": {
          "type": "object",
          "properties": {
            "glean.error.invalid_label": {
              "additionalProperties": {
                "type": "integer"
              },
              "propertyNames": {
                "comment": "This must be at least the length of 'category.name' metric names to support error reporting",
                "maxLength": 61,
                "type": "string"
              },
              "type": "object",
              "description": "Counts the number of times a metric was set with an invalid label.\nThe labels are the `category.name` identifier of the metric.\n"
            },
            "glean.error.invalid_state": {
              "additionalProperties": {
                "type": "integer"
              },
              "propertyNames": {
                "comment": "This must be at least the length of 'category.name' metric names to support error reporting",
                "maxLength": 61,
                "type": "string"
              },
              "type": "object",
              "description": "Counts the number of times a timing metric was used incorrectly.\nThe labels are the `category.name` identifier of the metric.\n"
            },
            "glean.error.invalid_value": {
              "additionalProperties": {
                "type": "integer"
              },
              "propertyNames": {
                "comment": "This must be at least the length of 'category.name' metric names to support error reporting",
                "maxLength": 61,
                "type": "string"
              },
              "type": "object",
              "description": "Counts the number of times a metric was set to an invalid value.\nThe labels are the `category.name` identifier of the metric.\n"
            },
            "glean.error.invalid_overflow": {
              "additionalProperties": {
                "type": "integer"
              },
              "propertyNames": {
                "comment": "This must be at least the length of 'category.name' metric names to support error reporting",
                "maxLength": 61,
                "type": "string"
              },
              "type": "object",
              "description": "Counts the number of times a metric was set a value that overflowed.\nThe labels are the `category.name` identifier of the metric.\n"
            },
            "glean.upload.ping_upload_failure": {
              "additionalProperties": {
                "type": "integer"
              },
              "propertyNames": {
                "comment": "This must be at least the length of 'category.name' metric names to support error reporting",
                "maxLength": 61,
                "type": "string"
              },
              "type": "object",
              "description": "Counts the number of ping upload failures, by type of failure.\nThis includes failures for all ping types,\nthough the counts appear in the next successfully sent `metrics` ping.\n"
            },
            "glean.validation.pings_submitted": {
              "additionalProperties": {
                "type": "integer"
              },
              "propertyNames": {
                "comment": "This must be at least the length of 'category.name' metric names to support error reporting",
                "maxLength": 61,
                "type": "string"
              },
              "type": "object",
              "description": "A count of the pings submitted, by ping type.\n\nThis metric appears in both the metrics and baseline pings.\n\n- On the metrics ping, the counts include the number of pings sent since\n  the last metrics ping (including the last metrics ping)\n- On the baseline ping, the counts include the number of pings send since\n  the last baseline ping (including the last baseline ping)\n"
            }
          }
        },
        "memory_distribution": {
          "type": "object",
          "properties": {
            "glean.upload.discarded_exceeding_pings_size": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "sum": {
                  "type": "integer"
                },
                "values": {
                  "additionalProperties": {
                    "type": "integer"
                  },
                  "propertyNames": {
                    "pattern": "^[0-9]+$"
                  },
                  "type": "object"
                }
              },
              "required": [
                "values"
              ],
              "type": "object",
              "description": "The size of pings that exceeded the maximum ping size allowed for upload.\n"
            },
            "glean.upload.pending_pings_directory_size": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "sum": {
                  "type": "integer"
                },
                "values": {
                  "additionalProperties": {
                    "type": "integer"
                  },
                  "propertyNames": {
                    "pattern": "^[0-9]+$"
                  },
                  "type": "object"
                }
              },
              "required": [
                "values"
              ],
              "type": "object",
              "description": "The size of the pending pings directory upon initialization of Glean.\nThis does not include the size of the deletion request pings directory.\n"
            },
            "glean.database.size": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "sum": {
                  "type": "integer"
                },
                "values": {
                  "additionalProperties": {
                    "type": "integer"
                  },
                  "propertyNames": {
                    "pattern": "^[0-9]+$"
                  },
                  "type": "object"
                }
              },
              "required": [
                "values"
              ],
              "type": "object",
              "description": "The size of the database file at startup.\n"
            }
          }
        },
        "string": {
          "type": "object",
          "properties": {
            "ping_reason": {
              "type": "string",
              "description": "The optional reason the ping was submitted.\nThe specific values for reason are specific to each ping, and are\ndocumented in the ping's pings.yaml file.\n"
            }
          }
        }
      },
      "type": "object"
    },
    "ping_info": {
      "additionalProperties": false,
      "properties": {
        "end_time": {
          "format": "datetime",
          "type": "string"
        },
        "experiments": {
          "additionalProperties": {
            "additionalProperties": false,
            "properties": {
              "branch": {
                "maxLength": 100,
                "type": "string"
              },
              "extra": {
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "properties": {
                      "type": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            },
            "required": [
              "branch"
            ],
            "type": "object"
          },
          "propertyNames": {
            "maxLength": 100,
            "type": "string"
          },
          "type": "object"
        },
        "ping_type": {
          "maxLength": 30,
          "pattern": "^[a-z-_][a-z0-9-_]*$",
          "type": "string"
        },
        "reason": {
          "maxLength": 30,
          "type": "string"
        },
        "seq": {
          "type": "integer"
        },
        "start_time": {
          "format": "datetime",
          "type": "string"
        }
      },
      "required": [
        "seq",
        "start_time",
        "end_time"
      ],
      "type": "object"
    },
    "additional_properties": {
      "description": "A JSON string containing any payload properties not present in the schema",
      "type": "string"
    },
    "document_id": {
      "description": "The document ID specified in the URI when the client sent this message",
      "type": "string"
    },
    "metadata": {
      "properties": {
        "geo": {
          "description": "Results of a geographic lookup based on the client's IP address",
          "properties": {
            "city": {
              "type": "string"
            },
            "country": {
              "description": "An ISO 3166-1 alpha-2 country code",
              "type": "string"
            },
            "db_version": {
              "description": "The specific geo database version used for this lookup",
              "type": "string"
            },
            "subdivision1": {
              "description": "First major country subdivision, typically a state, province, or county",
              "type": "string"
            },
            "subdivision2": {
              "description": "Second major country subdivision; not applicable for most countries",
              "type": "string"
            }
          },
          "type": "object"
        },
        "header": {
          "description": "Headers included in the client's HTTP request",
          "properties": {
            "date": {
              "description": "Date HTTP header",
              "type": "string"
            },
            "dnt": {
              "description": "DNT (Do Not Track) HTTP header",
              "type": "string"
            },
            "x_debug_id": {
              "description": "X-Debug-Id HTTP header",
              "type": "string"
            },
            "x_foxsec_ip_reputation": {
              "description": "X-Foxsec-IP-Reputation header",
              "type": "string"
            },
            "x_lb_tags": {
              "description": "X-LB-Tags HTTP header",
              "type": "string"
            },
            "x_pingsender_version": {
              "description": "X-PingSender-Version HTTP header",
              "type": "string"
            },
            "x_source_tags": {
              "description": "X-Source-Tags HTTP header",
              "type": "string"
            },
            "x_telemetry_agent": {
              "description": "X-Telemetry-Agent HTTP header",
              "type": "string"
            }
          },
          "type": "object"
        },
        "isp": {
          "description": "Results of ISP lookup based on the client's IP address",
          "properties": {
            "db_version": {
              "description": "The specific geo ISP database version used for this lookup",
              "type": "string"
            },
            "name": {
              "description": "The name of the ISP associated with the client's IP address",
              "type": "string"
            },
            "organization": {
              "description": "The name of a specific business entity associated with the client's IP address when available; otherwise the ISP name",
              "type": "string"
            }
          },
          "type": "object"
        },
        "user_agent": {
          "description": "Parsed components of the client's user agent string",
          "properties": {
            "browser": {
              "type": "string"
            },
            "os": {
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "normalized_app_name": {
      "description": "Set to \"Other\" if this message contained an unrecognized app name",
      "type": "string"
    },
    "normalized_channel": {
      "description": "Set to \"Other\" if this message contained an unrecognized channel name",
      "type": "string"
    },
    "normalized_country_code": {
      "description": "An ISO 3166-1 alpha-2 country code",
      "type": "string"
    },
    "normalized_os": {
      "description": "Set to \"Other\" if this message contained an unrecognized OS name",
      "type": "string"
    },
    "normalized_os_version": {
      "type": "string"
    },
    "sample_id": {
      "description": "Hashed version of client_id (if present) useful for partitioning; ranges from 0 to 99",
      "type": "integer"
    },
    "submission_timestamp": {
      "description": "Time when the ingestion edge server accepted this message",
      "format": "date-time",
      "type": "string"
    }
  },
  "required": [
    "ping_info",
    "client_info",
    "submission_timestamp",
    "metadata"
  ],
  "title": "Ping transport",
  "type": "object",
  "mozPipelineMetadata": {
    "bq_dataset_family": "mozillavpn",
    "bq_table": "metrics_v1",
    "bq_metadata_format": "structured",
    "expiration_policy": {
      "delete_after_days": 180
    }
  }
}